name: Build and Deploy Flask Backend to Azure Container Apps

on: 
  push:
    branches:
      - production-azure
    paths:
      - 'golfapp-server/**'

env:
  AZURE_CONTAINER_REGISTRY: golfappacrsimon
  IMAGE_NAME: golf-app-server

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Build and push Docker image
      run: |
        az acr login --name ${{ env.AZURE_CONTAINER_REGISTRY }}
        docker build -t ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.IMAGE_NAME }}:latest -f golfapp-server/Dockerfile golfapp-server
        docker push ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.IMAGE_NAME }}:latest

    - name: Set up Python for Alembic
      uses: actions/setup-python@v5
      with:
        python-version: '3.9' # Use a compatible Python version

    - name: Install Python dependencies for Alembic
      run: |
        python -m pip install --upgrade pip
        pip install -r golfapp-server/requirements.txt
        pip install PyMySQL # Ensure MySQL driver is installed

    - name: Build DATABASE_URL for Azure MySQL
      run: |
        if [[ "${{ secrets.AZURE_MYSQL_CONNECTION_STRING }}" == *\?* ]]; then
          echo "DATABASE_URL=${{ secrets.AZURE_MYSQL_CONNECTION_STRING }}&charset=utf8mb4&ssl-mode=REQUIRED" >> $GITHUB_ENV
        else
          echo "DATABASE_URL=${{ secrets.AZURE_MYSQL_CONNECTION_STRING }}?charset=utf8mb4&ssl-mode=REQUIRED" >> $GITHUB_ENV
        fi

    - name: Run Alembic Migrations
      env:
        DATABASE_URL: ${{ env.DATABASE_URL }}
      run: |
        alembic -c alembic.ini upgrade head

    - name: Deploy to Azure Container Apps
      uses: azure/container-apps-deploy-action@v1
      with:
        appSourcePath: golfapp-server
        containerAppName: golf-app-server-simon
        resourceGroup: golf-app-rg
        imageToDeploy: ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.IMAGE_NAME }}:latest
        acrName: ${{ env.AZURE_CONTAINER_REGISTRY }}
        env: |
          DATABASE_URL="${{ env.DATABASE_URL }}"
